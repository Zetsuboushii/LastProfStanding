/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */

import androidx.compose.foundation.layout.*
import androidx.compose.material.Button
import androidx.compose.material.Scaffold
import androidx.compose.material.Text
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import lastprofstanding.engine.*
import lastprofstanding.engine.grid.*

class MyCell : Cell(true, 1f, null, null, 10f) {
    override val textRepresentation: String = "M"
    override fun getSpawnPattern(grid: Grid, position: GridPosition): SpawnPattern {
        return createSpawnPattern(position, Pair(GridPosition(0, -3), MyCell()))
    }

    override fun clone(): MyCell {
        return MyCell().apply {
            straightMovementCounter = this@MyCell.straightMovementCounter
            currentMovement = this@MyCell.currentMovement
            stepsSurvived = this@MyCell.stepsSurvived
        }
    }
}

@Composable
fun App() {
    val engine by remember { mutableStateOf(Engine.getInstance()) }
    var engineState by remember { mutableStateOf(EngineState(Grid(0, 0), Grid(0, 0), StatsCounter())) }
    var didResetGrid by remember { mutableStateOf(false) }

    if (!didResetGrid) {
        engine.load(LevelType.BASIC)
        engineState = engine.state
        didResetGrid = true
    }

    Scaffold(topBar = {
        Row {
            Button(onClick = {
                engine.startSimulation(SimulationSpeed.X1) { state ->
                    engineState = state
                }
            }) {
                Text("Start simulation")
            }
            Button(onClick = {
                engine.stopSimulation()
                engineState = engine.state
            }) {
                Text("Stop simulation")
            }
            Button(onClick = {
                engine.load(LevelType.BASIC)
                engineState = engine.state
            }) {
                Text("Reset simulation")
            }
            Button(onClick = {
                Sound.getInstance().play(Sound.SoundFile.ROBLOX_DEATH_SOUND)
            }) {
                Text("Sound check (1)")
            }
            Button(onClick = {
                Sound.getInstance().play(Sound.SoundFile.SETLX_SOUNDTRACK)
            }) {
                Text("Sound check (2)")
            }
            Button(onClick = {
                Sound.getInstance().stopBackgroundPlayback()
            }) {
                Text("Stop sound check")
            }
        }
    }) {
        Column(
            Modifier.fillMaxWidth(),
            verticalArrangement = Arrangement.Center,
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            engineState.tileGrid.draw()
            engineState.dataGrid.draw()
        }
    }
}